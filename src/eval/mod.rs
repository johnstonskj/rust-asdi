/*!
One-line description.

More detailed description, with

# Example

*/

use crate::edb::Constant;
use crate::error::Result;
use crate::{Database, Program, Query};
use std::fmt::Debug;

// ------------------------------------------------------------------------------------------------
// Public Types & Constants
// ------------------------------------------------------------------------------------------------

pub trait Evaluator {
    fn inference(&self, program: &Program, database: &Database) -> Result<Database>;
}

pub trait QueryEvaluator {
    fn evaluate(&self, query: &Query, program: &Program, database: &Database) -> Result<Results>;
}

#[derive(Debug)]
pub enum Results {
    None,
    Singular(Constant),
    Tabular(Vec<Vec<Constant>>),
}

// ------------------------------------------------------------------------------------------------
// Private Types & Constants
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Macros
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------

pub mod naive;
