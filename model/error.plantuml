@startuml

!include options.plantuml

interface std::error::Error
hide "std::error::Error" members

class std::result::Result
hide "std::result::Result" members

namespace asdi::error {
    class SourceLocation {
        line: usize
        column: usize
    }

    enum Error {
        AnonymousVariableNotAllowed
        AttributeDoesNotExist
        AttributeIndexInvalid
        ComparisonIsAlwaysFalse
        ComparisonIsAlwaysTrue
        ExtensionalPredicateInRuleHead
        FactDoesNotConformToSchema
        FormatError
        HeadVariablesMissingInBody
        IncompatibleTypes
        InvalidHeadAtomCount
        InvalidValue
        LanguageFeatureDisabled
        LanguageFeatureUnsupported
        NegativeVariablesNotAlsoPositive
        NotStratifiable
        NullaryFactsNotAllowed
        ParserError
        RelationDoesNotExist
        RelationExists
        Serialization
        SerializationFormatUnknown
        SerializationOperationUnsupported
    }
    hide Error methods

    class error <<module>> {
        anonymous_variable_not_allowed() : Error
        attribute_does_not_exist() : Error
        attribute_index_Invalid() : Error
        comparison_is_always_false() : Error
        comparison_is_always_true() : Error
        extensional_predicate_in_rule_head() : Error
        fact_does_not_conform_to_schema() : Error
        format_error() : Error
        head_variables_missing_in_body() : Error
        incompatible_types() : Error
        invalid_head_atom_count() : Error
        invalid_value() : Error
        language_feature_disabled() : Error
        language_feature_unsupported() : Error
        negative_variables_not_also_positive() : Error
        not_stratifiable() : Error
        nullary_facts_not_allowed() : Error
        parser_error() : Error
        relation_does_not_exist() : Error
        relation_exists() : Error
        serialization() : Error
        serialization_format_unknown() : Error
        serialization_operation_unsupported() : Error
    }

    Error ..|> std::error::Error
    Error .right.> SourceLocation

    class Result << (T,#ADD1B2) type >>

    Result .left.> Error
    Result ..> std::result::Result: base

    error .right.> Error
}

@enduml