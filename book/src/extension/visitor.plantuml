@startuml

!include ../model/options.plantuml

class asdi::Program #white
hide "asdi::Program" members

class asdi::edb::RelationSet #white
hide "asdi::edb::RelationSet" members

class asdi::edb::Relation #white
hide "asdi::edb::Relation" members

class asdi::edb::Fact #white
hide "asdi::edb::Fact" members

class asdi::idb::RuleSet #white
hide "asdi::idb::RuleSet" members

class asdi::idb::Rule #white
hide "asdi::idb::Rule" members

class asdi::idb::query::QuerySet #white
hide "asdi::idb::query::QuerySet" members

class asdi::idb::query::Query #white
hide "asdi::idb::query::Query" members

namespace asdi::visitor {

    interface ProgramVisitor<T> {
        start_program(program: &Program) -> Result<T>
        end_program(program: &Program) : Result<T>

        start_relations(relations: &RelationSet, extensional: bool) : Result<Option<Box<dyn RelationVisitor<T>>>>
        end_relations(visitor: Box<dyn RelationVisitor<T>>) : Result<T>

        start_rules(relations: &RuleSet) : Result<Option<Box<dyn RuleVisitor<T>>>>
        end_rules(visitor: Box<dyn RuleVisitor<T>>) : Result<T>

        start_queries(queries: &QuerySet) : Result<Option<Box<dyn QueryVisitor<T>>>>
        end_queries(visitor: Box<dyn QueryVisitor<T>>) : Result<T>
    }
    interface RelationVisitor<T> {
        start_relation(relation: &Relation) : Result<T>
        fact(fact: &Fact) : Result<T>
        end_relation(relation: &Relation) : Result<T>
    }
    interface RuleVisitor<T> {
        start_rule(rule: &Rule) : Result<T>
        end_rule(rule: &Rule) : Result<T>
    }
    interface QueryVisitor<T> {
        start_query(query: &Query) : Result<T>
        end_query(query: &Query) : Result<T>
    }

    ProgramVisitor ..> RelationVisitor
    ProgramVisitor ..> RuleVisitor
    ProgramVisitor ..> QueryVisitor
    ProgramVisitor ..> asdi::Program
    ProgramVisitor ..> asdi::edb::RelationSet
    ProgramVisitor ..> asdi::idb::RuleSet
    ProgramVisitor ..> asdi::idb::query::QuerySet

    RelationVisitor ..> asdi::edb::Relation
    RelationVisitor ..> asdi::edb::Fact

    RuleVisitor ..> asdi::idb::Rule

    QueryVisitor ..> asdi::idb::query::Query

    class features << module >> {
        format_program() : String
        visit_program<T>() : T
    }

    features ..> ProgramVisitor
}

@enduml